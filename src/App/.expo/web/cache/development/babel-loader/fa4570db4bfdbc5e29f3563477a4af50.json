{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\TigerSpike\\\\LandmarkRemark\\\\src\\\\App\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { getLandmarks } from \"./services/api\";\nexport default function App() {\n  var _useState = useState(getLandmarks()),\n      _useState2 = _slicedToArray(_useState, 2),\n      landmarks = _useState2[0],\n      setLandmarks = _useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: -37.8125,\n      longitude: 145,\n      latitudeDelta: 0.05,\n      longitudeDelta: 0.05\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, landmarks.map(function (landmark) {\n    return React.createElement(Marker, {\n      coordinate: {\n        latitude: landmark.Latitude,\n        longitude: landmark.Longitude\n      },\n      title: landmark.Username,\n      description: landmark.Comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(View, {\n    style: styles.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \"Landmark Remark\"), React.createElement(Text, {\n    style: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, \"Add\")), React.createElement(Image, {\n    source: require(\"./images/crosshair.png\"),\n    style: styles.crosshair,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    flexDirection: 'row'\n  },\n  logo: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    fontSize: 16,\n    color: '#3366ff'\n  }\n});","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/App.tsx"],"names":["React","useState","MapView","Marker","getLandmarks","App","landmarks","setLandmarks","styles","container","map","latitude","longitude","latitudeDelta","longitudeDelta","landmark","Latitude","Longitude","Username","Comment","toolbar","logo","link","require","crosshair","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","position","top","left","marginLeft","marginTop","padding","flexDirection","fontSize","fontWeight","color"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,OAAP,IAAkBC,MAAlB,QAAgC,mBAAhC;AACA,SAASC,YAAT;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACMJ,QAAQ,CAACG,YAAY,EAAb,CADd;AAAA;AAAA,MACrBE,SADqB;AAAA,MACVC,YADU;;AAG5B,SACE,0CACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAED,MAAM,CAACE,GAAvB;AAA4B,IAAA,aAAa,EAAE;AACzCC,MAAAA,QAAQ,EAAE,CAAC,OAD8B;AAEzCC,MAAAA,SAAS,EAAE,GAF8B;AAGzCC,MAAAA,aAAa,EAAE,IAH0B;AAIzCC,MAAAA,cAAc,EAAE;AAJyB,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGR,SAAS,CAACI,GAAV,CAAc,UAACK,QAAD;AAAA,WACb,oBAAC,MAAD;AACE,MAAA,UAAU,EAAE;AAAEJ,QAAAA,QAAQ,EAAEI,QAAQ,CAACC,QAArB;AAA+BJ,QAAAA,SAAS,EAAEG,QAAQ,CAACE;AAAnD,OADd;AAEE,MAAA,KAAK,EAAEF,QAAQ,CAACG,QAFlB;AAGE,MAAA,WAAW,EAAEH,QAAQ,CAACI,OAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADa;AAAA,GAAd,CANH,CADF,EAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACY,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEZ,MAAM,CAACa,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEb,MAAM,CAACc,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAfF,EAmBE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEC,OAAO,0BAAtB;AAAkD,IAAA,KAAK,EAAEf,MAAM,CAACgB,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF,CADF;AAyBD;AAED,IAAMhB,MAAM,GAAGiB,UAAU,CAACC,MAAX,CAAkB;AAC/BjB,EAAAA,SAAS,EAAE;AACTkB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BpB,EAAAA,GAAG,EAAE;AACHiB,IAAAA,IAAI,EAAE,CADH;AAEHI,IAAAA,KAAK,EAAE,MAFJ;AAGHC,IAAAA,MAAM,EAAE;AAHL,GAP0B;AAY/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,GAAG,EAAE,KAFI;AAGTC,IAAAA,IAAI,EAAE,KAHG;AAITJ,IAAAA,KAAK,EAAE,EAJE;AAKTC,IAAAA,MAAM,EAAE,EALC;AAMTI,IAAAA,UAAU,EAAE,CAAC,EANJ;AAOTC,IAAAA,SAAS,EAAE,CAAC;AAPH,GAZoB;AAqB/BjB,EAAAA,OAAO,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPW,IAAAA,OAAO,EAAE,EAFF;AAGPC,IAAAA,aAAa,EAAE;AAHR,GArBsB;AA0B/BlB,EAAAA,IAAI,EAAE;AACJM,IAAAA,IAAI,EAAE,CADF;AAEJa,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,UAAU,EAAE;AAHR,GA1ByB;AA+B/BnB,EAAAA,IAAI,EAAE;AACJkB,IAAAA,QAAQ,EAAE,EADN;AAEJE,IAAAA,KAAK,EAAE;AAFH;AA/ByB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\nimport { getLandmarks } from './services/api'\n\nexport default function App() {\n  const [landmarks, setLandmarks] = useState(getLandmarks());\n\n  return (\n    <>\n      <View style={styles.container}>\n        <MapView style={styles.map} initialRegion={{\n          latitude: -37.8125,\n          longitude: 145,\n          latitudeDelta: 0.05,\n          longitudeDelta: 0.05,\n        }}>\n          {landmarks.map((landmark) =>\n            <Marker\n              coordinate={{ latitude: landmark.Latitude, longitude: landmark.Longitude }}\n              title={landmark.Username}\n              description={landmark.Comment}\n            />\n          )}\n        </MapView>\n        <View style={styles.toolbar}>\n          <Text style={styles.logo}>Landmark Remark</Text>\n          <Text style={styles.link}>Add</Text>\n        </View>\n        <Image source={require('./images/crosshair.png')} style={styles.crosshair} />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25,\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    flexDirection: 'row',\n  },\n  logo: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  link: {\n    fontSize: 16,\n    color: '#3366ff',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}