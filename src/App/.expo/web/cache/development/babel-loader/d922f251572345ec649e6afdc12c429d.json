{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\TigerSpike\\\\LandmarkRemark\\\\src\\\\App\\\\App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { getLandmarks } from \"./services/api\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      landmarks = _useState2[0],\n      setLandmarks = _useState2[1];\n\n  useEffect(function () {\n    var fetchLandmarks = function fetchLandmarks() {\n      return _regeneratorRuntime.async(function fetchLandmarks$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setLandmarks;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getLandmarks());\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (landmarks.length === 0) {\n      fetchLandmarks();\n    }\n  });\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: -37.8125,\n      longitude: 145,\n      latitudeDelta: 0.05,\n      longitudeDelta: 0.05\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, landmarks.map(function (landmark) {\n    return React.createElement(Marker, {\n      coordinate: {\n        latitude: landmark.latitude,\n        longitude: landmark.longitude\n      },\n      title: landmark.username,\n      description: landmark.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(View, {\n    style: styles.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Landmark Remark \", landmarks.length), React.createElement(Text, {\n    style: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Add\")), React.createElement(Image, {\n    source: require(\"./images/crosshair.png\"),\n    style: styles.crosshair,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    flexDirection: 'row'\n  },\n  logo: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    fontSize: 16,\n    color: '#3366ff'\n  }\n});","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/App.tsx"],"names":["React","useState","useEffect","MapView","Marker","getLandmarks","App","landmarks","setLandmarks","fetchLandmarks","length","styles","container","map","latitude","longitude","latitudeDelta","longitudeDelta","landmark","username","comment","toolbar","logo","link","require","crosshair","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","position","top","left","marginLeft","marginTop","padding","flexDirection","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport MapView, { Marker } from 'react-native-maps';\nimport { getLandmarks } from './services/api'\nimport { Landmark } from './models/Landmark';\n\nexport default function App() {\n  const [landmarks, setLandmarks] = useState([] as Landmark[]);\n\n  useEffect(() => {\n    var fetchLandmarks = async () => {\n      setLandmarks(await getLandmarks())\n    }\n\n    if (landmarks.length === 0) {\n      fetchLandmarks();\n    }\n  });\n\n  return (\n    <>\n      <View style={styles.container}>\n        <MapView style={styles.map} initialRegion={{\n          latitude: -37.8125,\n          longitude: 145,\n          latitudeDelta: 0.05,\n          longitudeDelta: 0.05,\n        }}>\n          {landmarks.map((landmark) =>\n            <Marker\n              coordinate={{ latitude: landmark.latitude, longitude: landmark.longitude }}\n              title={landmark.username}\n              description={landmark.comment}\n            />\n          )}\n        </MapView>\n        <View style={styles.toolbar}>\n          <Text style={styles.logo}>Landmark Remark {landmarks.length}</Text>\n          <Text style={styles.link}>Add</Text>\n        </View>\n        <Image source={require('./images/crosshair.png')} style={styles.crosshair} />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25,\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    flexDirection: 'row',\n  },\n  logo: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  link: {\n    fontSize: 16,\n    color: '#3366ff',\n  }\n});\n"]},"metadata":{},"sourceType":"module"}