{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar apiBaseUri = \"http://192.168.0.150:5000/api/\";\nvar getLandmarksUri = apiBaseUri + \"landmarks\";\nvar getUsersUri = apiBaseUri + \"users\";\nexport function getUser(username) {\n  var user, response;\n  return _regeneratorRuntime.async(function getUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          user = null;\n          console.log('Retrieving User details for ' + username);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(getUsersUri + '/' + username));\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          user = _context.sent;\n          console.log('User retrieved');\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n          console.log('Error: ' + _context.t0);\n\n        case 15:\n          return _context.abrupt(\"return\", user);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}\nexport function getLandmarks() {\n  var landmarks, response;\n  return _regeneratorRuntime.async(function getLandmarks$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          landmarks = [];\n          console.log('Retrieving Landmarks from ' + getLandmarksUri);\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(fetch(getLandmarksUri));\n\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          landmarks = _context2.sent;\n          console.log('Landmarks retrieved');\n          _context2.next = 15;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log('Error: ' + _context2.t0);\n\n        case 15:\n          return _context2.abrupt(\"return\", landmarks);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/services/api.ts"],"names":["apiBaseUri","getLandmarksUri","getUsersUri","getUser","username","user","console","log","fetch","response","json","getLandmarks","landmarks"],"mappings":";AAGA,IAAMA,UAAU,GAAG,gCAAnB;AACA,IAAMC,eAAe,GAAGD,UAAU,GAAG,WAArC;AACA,IAAME,WAAW,GAAGF,UAAU,GAAG,OAAjC;AAEA,OAAO,SAAeG,OAAf,CAAuBC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,UAAAA,IADC,GACmB,IADnB;AAGLC,UAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCH,QAA7C;AAHK;AAAA;AAAA,2CAMkBI,KAAK,CAACN,WAAW,GAAG,GAAd,GAAoBE,QAArB,CANvB;;AAAA;AAMCK,UAAAA,QAND;AAAA;AAAA,2CAOUA,QAAQ,CAACC,IAAT,EAPV;;AAAA;AAOHL,UAAAA,IAPG;AAQHC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AARG;AAAA;;AAAA;AAAA;AAAA;AAWHD,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAXG;AAAA,2CAcEF,IAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBP,OAAO,SAAeM,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,UAAAA,SADC,GACuB,EADvB;AAGLN,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BN,eAA3C;AAHK;AAAA;AAAA,2CAMkBO,KAAK,CAACP,eAAD,CANvB;;AAAA;AAMCQ,UAAAA,QAND;AAAA;AAAA,2CAOeA,QAAQ,CAACC,IAAT,EAPf;;AAAA;AAOHE,UAAAA,SAPG;AAQHN,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AARG;AAAA;;AAAA;AAAA;AAAA;AAWHD,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAXG;AAAA,4CAcEK,SAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Landmark } from \"../models/Landmark\";\r\nimport { User } from \"../models/User\";\r\n\r\nconst apiBaseUri = \"http://192.168.0.150:5000/api/\"\r\nconst getLandmarksUri = apiBaseUri + \"landmarks\"\r\nconst getUsersUri = apiBaseUri + \"users\"\r\n\r\nexport async function getUser(username: string): Promise<User | null> {\r\n  var user: User | null = null\r\n\r\n  console.log('Retrieving User details for ' + username)\r\n\r\n  try {\r\n    var response = await fetch(getUsersUri + '/' + username)\r\n    user = await response.json()\r\n    console.log('User retrieved')\r\n  }\r\n  catch(error) {\r\n    console.log('Error: ' + error)\r\n  }\r\n  \r\n  return user\r\n}\r\n\r\nexport async function getLandmarks(): Promise<Landmark[]> {\r\n  var landmarks: Landmark[] = []\r\n\r\n  console.log('Retrieving Landmarks from ' + getLandmarksUri)\r\n\r\n  try {\r\n    var response = await fetch(getLandmarksUri)\r\n    landmarks = await response.json()\r\n    console.log('Landmarks retrieved')\r\n  }\r\n  catch(error) {\r\n    console.log('Error: ' + error)\r\n  }\r\n\r\n  return landmarks\r\n}"]},"metadata":{},"sourceType":"module"}