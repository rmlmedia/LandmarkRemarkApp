{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\TigerSpike\\\\LandmarkRemark\\\\src\\\\App\\\\App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { getLandmarks, getUsers, addLandmark } from \"./services/api\";\nexport default function App() {\n  var defaultLocation = {\n    latitude: -37.807,\n    longitude: 144.991,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05\n  };\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      landmarks = _useState2[0],\n      setLandmarks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentUserIndex = _useState6[0],\n      setCurrentUserIndex = _useState6[1];\n\n  var _useState7 = useState(defaultLocation),\n      _useState8 = _slicedToArray(_useState7, 2),\n      currentLocation = _useState8[0],\n      setCurrentLocation = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      comment = _useState10[0],\n      setComment = _useState10[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setLandmarks;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getLandmarks());\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              _context.t2 = setUsers;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(getUsers());\n\n            case 8:\n              _context.t3 = _context.sent;\n              (0, _context.t2)(_context.t3);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (landmarks.length === 0) {\n      fetchData();\n    }\n  }, []);\n\n  var getUser = function getUser(index) {\n    if (!users || index < 0 || index >= users.length) {\n      return '';\n    }\n\n    return users[index].fullname;\n  };\n\n  var changeUser = function changeUser() {\n    setCurrentUserIndex((currentUserIndex + 1) % users.length);\n  };\n\n  var addNewLandmark = function addNewLandmark() {\n    var landmark, newLandmark;\n    return _regeneratorRuntime.async(function addNewLandmark$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            landmark = {};\n            landmark.username = users[currentUserIndex].username;\n            landmark.latitude = currentLocation.latitude;\n            landmark.longitude = currentLocation.longitude;\n            landmark.comment = comment;\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(addLandmark(landmark));\n\n          case 7:\n            newLandmark = _context2.sent;\n            console.log(newLandmark);\n            setLandmarks(landmarks.concat(newLandmark));\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: defaultLocation,\n    onRegionChangeComplete: function onRegionChangeComplete(region) {\n      return setCurrentLocation(region);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, landmarks.map(function (landmark) {\n    var _users$find;\n\n    return React.createElement(Marker, {\n      key: landmark.id,\n      coordinate: {\n        latitude: landmark.latitude,\n        longitude: landmark.longitude\n      },\n      title: (_users$find = users.find(function (u) {\n        return u.username === landmark.username;\n      })) == null ? void 0 : _users$find.fullname,\n      description: landmark.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(Image, {\n    source: require(\"./images/crosshair.png\"),\n    style: styles.crosshair,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.userToolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, getUser(currentUserIndex)), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeUser();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.changeUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \" [Change]\"))), React.createElement(View, {\n    style: styles.commentToolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.comment,\n    multiline: true,\n    numberOfLines: 1,\n    maxLength: 500,\n    placeholder: \"Comment for new landmark\",\n    onChangeText: function onChangeText(text) {\n      return setComment(text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return addNewLandmark();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.add,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Add\"))))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    width: '100%'\n  },\n  userToolbar: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    justifyContent: 'flex-start'\n  },\n  user: {\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  changeUser: {\n    fontSize: 16,\n    color: '#3366ff'\n  },\n  commentToolbar: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  comment: {\n    borderColor: '#999999',\n    borderWidth: 1,\n    padding: 10,\n    flex: 1\n  },\n  add: {\n    textAlign: 'right',\n    fontSize: 16,\n    color: '#3366ff',\n    marginLeft: 10\n  }\n});","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/App.tsx"],"names":["React","useState","useEffect","MapView","Marker","getLandmarks","getUsers","addLandmark","App","defaultLocation","latitude","longitude","latitudeDelta","longitudeDelta","landmarks","setLandmarks","users","setUsers","currentUserIndex","setCurrentUserIndex","currentLocation","setCurrentLocation","comment","setComment","fetchData","length","getUser","index","fullname","changeUser","addNewLandmark","landmark","username","newLandmark","console","log","concat","styles","container","map","region","id","find","u","require","crosshair","toolbar","userToolbar","user","commentToolbar","text","add","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","position","top","left","marginLeft","marginTop","padding","flexDirection","paddingBottom","fontSize","fontWeight","color","borderColor","borderWidth","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, Text, View, Image, TouchableOpacity, TextInput } from 'react-native'\nimport MapView, { Marker, Region } from 'react-native-maps'\nimport { getLandmarks, getUsers, addLandmark } from './services/api'\nimport { Landmark } from './models/Landmark'\nimport { User } from './models/User'\n\nexport default function App() {\n  const defaultLocation = {\n    latitude: -37.807,\n    longitude: 144.991,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05,\n  } as Region\n  const [landmarks, setLandmarks] = useState([] as Landmark[])\n  const [users, setUsers] = useState([] as User[])\n  const [currentUserIndex, setCurrentUserIndex] = useState(0)\n  const [currentLocation, setCurrentLocation] = useState(defaultLocation)\n  const [comment, setComment] = useState('')\n\n  useEffect(() => {\n    var fetchData = async () => {\n      setLandmarks(await getLandmarks())\n      setUsers(await getUsers())\n    }\n\n    if (landmarks.length === 0) {\n      fetchData()\n    }\n  }, []);\n\n  var getUser = (index: number) => {\n    if (!users || index < 0 || index >= users.length) {\n      return ''\n    }\n\n    return users[index].fullname\n  }\n\n  var changeUser = () => {\n    setCurrentUserIndex((currentUserIndex + 1) % users.length)\n  }\n\n  var addNewLandmark = async () => {\n    // Build a new landmark object\n    var landmark = {} as Landmark\n    landmark.username = users[currentUserIndex].username\n    landmark.latitude = currentLocation.latitude\n    landmark.longitude = currentLocation.longitude\n    landmark.comment = comment\n\n    // Post the landmark to the server\n    var newLandmark = await addLandmark(landmark)\n    console.log(newLandmark)\n\n    // Add the landmark to the UI\n    setLandmarks(landmarks.concat(newLandmark))\n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <MapView style={styles.map} initialRegion={defaultLocation} onRegionChangeComplete={region => setCurrentLocation(region)}>\n          {landmarks.map((landmark) =>\n            <Marker\n              key={landmark.id}\n              coordinate={{ latitude: landmark.latitude, longitude: landmark.longitude }}\n              title={(users.find(u => u.username === landmark.username))?.fullname}\n              description={landmark.comment}\n            />\n          )}\n        </MapView>\n        <Image source={require('./images/crosshair.png')} style={styles.crosshair} />\n        <View style={styles.toolbar}>\n          <View style={styles.userToolbar}>\n            <Text style={styles.user}>{getUser(currentUserIndex)}</Text>\n            <TouchableOpacity onPress={() => changeUser()}>\n              <Text style={styles.changeUser}> [Change]</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.commentToolbar}>\n            <TextInput\n              style={styles.comment}\n              multiline\n              numberOfLines={1}\n              maxLength={500}\n              placeholder='Comment for new landmark'\n              onChangeText={(text) => setComment(text)}\n            />\n            <TouchableOpacity onPress={() => addNewLandmark()}>\n              <Text style={styles.add}>Add</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25,\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    width: '100%',\n  },\n  userToolbar: {\n    flexDirection: 'row',\n    paddingBottom: 10,\n    justifyContent: 'flex-start',\n  },\n  user: {\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  changeUser: {\n    fontSize: 16,\n    color: '#3366ff',\n  },\n  commentToolbar: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  comment: {\n    borderColor: '#999999',\n    borderWidth: 1,\n    padding: 10,\n    flex: 1,\n  },\n  add: {\n    textAlign: 'right',\n    fontSize: 16,\n    color: '#3366ff',\n    marginLeft: 10,\n  }\n})\n"]},"metadata":{},"sourceType":"module"}