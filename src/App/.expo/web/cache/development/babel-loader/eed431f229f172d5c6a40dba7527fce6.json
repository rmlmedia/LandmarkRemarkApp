{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar apiBaseUri = 'http://192.168.0.150:5000/api/';\nvar getLandmarksUri = apiBaseUri + 'landmarks';\nvar addLandmarkUri = apiBaseUri + 'landmarks/add';\nvar getUsersUri = apiBaseUri + 'users';\nexport function getUsers() {\n  var users, response;\n  return _regeneratorRuntime.async(function getUsers$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          users = [];\n          console.log('Retrieving Users from ' + getUsersUri);\n          _context.prev = 2;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(getUsersUri));\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          users = _context.sent;\n          console.log('Users retrieved');\n          _context.next = 15;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n          console.log('Error: ' + _context.t0);\n\n        case 15:\n          return _context.abrupt(\"return\", users);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}\nexport function getLandmarks() {\n  var landmarks, response;\n  return _regeneratorRuntime.async(function getLandmarks$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          landmarks = [];\n          console.log('Retrieving Landmarks from ' + getLandmarksUri);\n          _context2.prev = 2;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(fetch(getLandmarksUri));\n\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          landmarks = _context2.sent;\n          console.log('Landmarks retrieved');\n          _context2.next = 15;\n          break;\n\n        case 12:\n          _context2.prev = 12;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.log('Error: ' + _context2.t0);\n\n        case 15:\n          return _context2.abrupt(\"return\", landmarks);\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}\nexport function addLandmark(landmark) {\n  var landmarkResponse, response;\n  return _regeneratorRuntime.async(function addLandmark$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          landmarkResponse = {};\n          console.log('Sending Landmark to be stored in database via ' + addLandmarkUri);\n          _context3.prev = 2;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(fetch(addLandmarkUri, {\n            method: 'post',\n            body: JSON.stringify(landmark)\n          }));\n\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          landmarkResponse = _context3.sent;\n          console.log('Landmark saved');\n          _context3.next = 15;\n          break;\n\n        case 12:\n          _context3.prev = 12;\n          _context3.t0 = _context3[\"catch\"](2);\n          console.log('Error: ' + _context3.t0);\n\n        case 15:\n          return _context3.abrupt(\"return\", landmarkResponse);\n\n        case 16:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[2, 12]], Promise);\n}","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/services/api.ts"],"names":["apiBaseUri","getLandmarksUri","addLandmarkUri","getUsersUri","getUsers","users","console","log","fetch","response","json","getLandmarks","landmarks","addLandmark","landmark","landmarkResponse","method","body","JSON","stringify"],"mappings":";AAGA,IAAMA,UAAU,GAAG,gCAAnB;AACA,IAAMC,eAAe,GAAGD,UAAU,GAAG,WAArC;AACA,IAAME,cAAc,GAAGF,UAAU,GAAG,eAApC;AACA,IAAMG,WAAW,GAAGH,UAAU,GAAG,OAAjC;AAEA,OAAO,SAAeI,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,UAAAA,KADC,GACe,EADf;AAGLC,UAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BJ,WAAvC;AAHK;AAAA;AAAA,2CAMkBK,KAAK,CAACL,WAAD,CANvB;;AAAA;AAMCM,UAAAA,QAND;AAAA;AAAA,2CAOWA,QAAQ,CAACC,IAAT,EAPX;;AAAA;AAOHL,UAAAA,KAPG;AAQHC,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AARG;AAAA;;AAAA;AAAA;AAAA;AAWHD,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;;AAXG;AAAA,2CAcEF,KAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBP,OAAO,SAAeM,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,UAAAA,SADC,GACuB,EADvB;AAGLN,UAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BN,eAA3C;AAHK;AAAA;AAAA,2CAMkBO,KAAK,CAACP,eAAD,CANvB;;AAAA;AAMCQ,UAAAA,QAND;AAAA;AAAA,2CAOeA,QAAQ,CAACC,IAAT,EAPf;;AAAA;AAOHE,UAAAA,SAPG;AAQHN,UAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AARG;AAAA;;AAAA;AAAA;AAAA;AAWHD,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAXG;AAAA,4CAcEK,SAdF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBP,OAAO,SAAeC,WAAf,CAA2BC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AACDC,UAAAA,gBADC,GACkB,EADlB;AAGLT,UAAAA,OAAO,CAACC,GAAR,CAAY,mDAAmDL,cAA/D;AAHK;AAAA;AAAA,2CAMkBM,KAAK,CAACN,cAAD,EAAiB;AACzCc,YAAAA,MAAM,EAAE,MADiC;AAEzCC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAFmC,WAAjB,CANvB;;AAAA;AAMCL,UAAAA,QAND;AAAA;AAAA,2CAUsBA,QAAQ,CAACC,IAAT,EAVtB;;AAAA;AAUHK,UAAAA,gBAVG;AAWHT,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAXG;AAAA;;AAAA;AAAA;AAAA;AAcHD,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;;AAdG;AAAA,4CAiBEQ,gBAjBF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { Landmark } from '../models/Landmark';\r\nimport { User } from '../models/User';\r\n\r\nconst apiBaseUri = 'http://192.168.0.150:5000/api/'\r\nconst getLandmarksUri = apiBaseUri + 'landmarks'\r\nconst addLandmarkUri = apiBaseUri + 'landmarks/add'\r\nconst getUsersUri = apiBaseUri + 'users'\r\n\r\nexport async function getUsers(): Promise<User[]> {\r\n  var users: User[] = []\r\n\r\n  console.log('Retrieving Users from ' + getUsersUri)\r\n\r\n  try {\r\n    var response = await fetch(getUsersUri)\r\n    users = await response.json()\r\n    console.log('Users retrieved')\r\n  }\r\n  catch(error) {\r\n    console.log('Error: ' + error)\r\n  }\r\n  \r\n  return users\r\n}\r\n\r\nexport async function getLandmarks(): Promise<Landmark[]> {\r\n  var landmarks: Landmark[] = []\r\n\r\n  console.log('Retrieving Landmarks from ' + getLandmarksUri)\r\n\r\n  try {\r\n    var response = await fetch(getLandmarksUri)\r\n    landmarks = await response.json()\r\n    console.log('Landmarks retrieved')\r\n  }\r\n  catch(error) {\r\n    console.log('Error: ' + error)\r\n  }\r\n\r\n  return landmarks\r\n}\r\n\r\nexport async function addLandmark(landmark: Landmark): Promise<Landmark> {\r\n  var landmarkResponse = {} as Landmark\r\n\r\n  console.log('Sending Landmark to be stored in database via ' + addLandmarkUri)\r\n\r\n  try {\r\n    var response = await fetch(addLandmarkUri, {\r\n      method: 'post',\r\n      body: JSON.stringify(landmark)\r\n    })\r\n    landmarkResponse = await response.json()\r\n    console.log('Landmark saved')\r\n  }\r\n  catch(error) {\r\n    console.log('Error: ' + error)\r\n  }\r\n\r\n  return landmarkResponse\r\n}"]},"metadata":{},"sourceType":"module"}