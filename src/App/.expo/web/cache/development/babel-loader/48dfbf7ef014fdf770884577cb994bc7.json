{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport PermissionsAndroid from \"react-native-web/dist/exports/PermissionsAndroid\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport GetLocation from 'react-native-get-location';\n\nfunction requestLocationPermission() {\n  var granted;\n  return _regeneratorRuntime.async(function requestLocationPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!(Platform.OS === 'android')) {\n            _context.next = 13;\n            break;\n          }\n\n          _context.prev = 1;\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(PermissionsAndroid.request(PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\n            'title': 'Location Access Required',\n            'message': 'This App needs to Access your location',\n            'buttonPositive': 'Grant'\n          }));\n\n        case 4:\n          granted = _context.sent;\n\n          if (!(granted === PermissionsAndroid.RESULTS.GRANTED)) {\n            _context.next = 7;\n            break;\n          }\n\n          return _context.abrupt(\"return\", true);\n\n        case 7:\n          return _context.abrupt(\"return\", false);\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](1);\n          return _context.abrupt(\"return\", false);\n\n        case 13:\n          return _context.abrupt(\"return\", true);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 10]], Promise);\n}\n\nexport function getCurrentLocation() {\n  return _regeneratorRuntime.async(function getCurrentLocation$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(requestLocationPermission());\n\n        case 2:\n          if (!_context2.sent) {\n            _context2.next = 4;\n            break;\n          }\n\n          GetLocation.getCurrentPosition({\n            enableHighAccuracy: true,\n            timeout: 1000\n          }).then(function (location) {\n            console.log(location);\n          }).catch(function (error) {\n            var code = error.code,\n                message = error.message;\n            console.warn(code, message);\n          });\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/app/services/location.ts"],"names":["GetLocation","requestLocationPermission","Platform","OS","PermissionsAndroid","request","PERMISSIONS","ACCESS_FINE_LOCATION","granted","RESULTS","GRANTED","getCurrentLocation","getCurrentPosition","enableHighAccuracy","timeout","then","location","console","log","catch","error","code","message","warn"],"mappings":";;;AAEA,OAAOA,WAAP,MAAwB,2BAAxB;;AAEA,SAAeC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACMC,QAAQ,CAACC,EAAT,KAAgB,SADtB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,2CAG4BC,kBAAkB,CAACC,OAAnB,CACpBD,kBAAkB,CAACE,WAAnB,CAA+BC,oBADX,EACiC;AACnD,qBAAS,0BAD0C;AAEnD,uBAAW,wCAFwC;AAGnD,8BAAkB;AAHiC,WADjC,CAH5B;;AAAA;AAGYC,UAAAA,OAHZ;;AAAA,gBAUUA,OAAO,KAAKJ,kBAAkB,CAACK,OAAnB,CAA2BC,OAVjD;AAAA;AAAA;AAAA;;AAAA,2CAWe,IAXf;;AAAA;AAAA,2CAaa,KAbb;;AAAA;AAAA;AAAA;AAAA,2CAea,KAfb;;AAAA;AAAA,2CAkBS,IAlBT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,OAAO,SAAeC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACKV,yBAAyB,EAD9B;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEHD,UAAAA,WAAW,CAACY,kBAAZ,CAA+B;AAC7BC,YAAAA,kBAAkB,EAAE,IADS;AAE7BC,YAAAA,OAAO,EAAE;AAFoB,WAA/B,EAICC,IAJD,CAIM,UAAAC,QAAQ,EAAI;AAChBC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,WAND,EAOCG,KAPD,CAOO,UAAAC,KAAK,EAAI;AAAA,gBACNC,IADM,GACYD,KADZ,CACNC,IADM;AAAA,gBACAC,OADA,GACYF,KADZ,CACAE,OADA;AAEdL,YAAAA,OAAO,CAACM,IAAR,CAAaF,IAAb,EAAmBC,OAAnB;AACD,WAVD;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import React from 'react'\r\nimport { PermissionsAndroid, Platform } from 'react-native'\r\nimport GetLocation from 'react-native-get-location'\r\n\r\nasync function requestLocationPermission(): Promise<boolean> {\r\n  if (Platform.OS === 'android') {\r\n    try {\r\n      const granted = await PermissionsAndroid.request(\r\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION, {\r\n          'title': 'Location Access Required',\r\n          'message': 'This App needs to Access your location',\r\n          'buttonPositive': 'Grant'\r\n        }\r\n      )\r\n      if (granted === PermissionsAndroid.RESULTS.GRANTED) {\r\n        return true\r\n      }\r\n      return false\r\n    } catch (err) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nexport async function getCurrentLocation() {\r\n  if (await requestLocationPermission()) {\r\n    GetLocation.getCurrentPosition({\r\n      enableHighAccuracy: true,\r\n      timeout: 1000,\r\n    })\r\n    .then(location => {\r\n      console.log(location);\r\n    })\r\n    .catch(error => {\r\n      const { code, message } = error;\r\n      console.warn(code, message);\r\n    })\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}