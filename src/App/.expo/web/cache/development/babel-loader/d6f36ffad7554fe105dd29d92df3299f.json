{"ast":null,"code":"var apiBaseUri = \"http://192.168.0.150:5000/api/\";\nvar getLandmarksUri = apiBaseUri + \"landmarks\";\n\nvar getLandmarksMockData = require(\"./mock-responses/landmarks.json\");\n\nexport function getLandmarks() {\n  var landmarks = [];\n  console.log('Retrieving Landmarks from ' + getLandmarksUri);\n  fetch(getLandmarksUri).then(function (response) {\n    return response.json();\n  }).then(function (data) {\n    console.log('Landmarks retrieved');\n    landmarks = data;\n  }).catch(function (error) {\n    console.log('Error: ' + error);\n  });\n  return landmarks;\n}","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/services/api.ts"],"names":["apiBaseUri","getLandmarksUri","getLandmarksMockData","require","getLandmarks","landmarks","console","log","fetch","then","response","json","data","catch","error"],"mappings":"AAGA,IAAMA,UAAU,GAAG,gCAAnB;AACA,IAAMC,eAAe,GAAGD,UAAU,GAAG,WAArC;;AACA,IAAME,oBAAoB,GAAGC,OAAO,mCAApC;;AAEA,OAAO,SAASC,YAAT,GAAoC;AACzC,MAAIC,SAAqB,GAAG,EAA5B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BN,eAA3C;AACAO,EAAAA,KAAK,CAACP,eAAD,CAAL,CACGQ,IADH,CACQ,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAF,IAAAA,SAAS,GAAGO,IAAZ;AACD,GALH,EAMGC,KANH,CAMS,UAACC,KAAD,EAAW;AAChBR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYO,KAAxB;AACD,GARH;AAUA,SAAOT,SAAP;AACD","sourcesContent":["import { Landmark } from \"../models/Landmark\";\r\nimport { User } from \"../models/User\";\r\n\r\nconst apiBaseUri = \"http://192.168.0.150:5000/api/\"\r\nconst getLandmarksUri = apiBaseUri + \"landmarks\"\r\nconst getLandmarksMockData = require('./mock-responses/landmarks.json')\r\n\r\nexport function getLandmarks(): Landmark[] {\r\n  var landmarks: Landmark[] = []\r\n\r\n  console.log('Retrieving Landmarks from ' + getLandmarksUri)\r\n  fetch(getLandmarksUri)\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log('Landmarks retrieved')\r\n      landmarks = data\r\n    })\r\n    .catch((error) => {\r\n      console.log('Error: ' + error)\r\n    })\r\n  \r\n  return landmarks\r\n}"]},"metadata":{},"sourceType":"module"}