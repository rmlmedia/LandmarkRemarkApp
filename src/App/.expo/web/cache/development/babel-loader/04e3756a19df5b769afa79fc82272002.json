{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\dev\\\\TigerSpike\\\\LandmarkRemark\\\\src\\\\App\\\\App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport MapView, { Marker } from 'react-native-maps';\nimport { Dropdown } from 'react-native-material-dropdown';\nimport { getLandmarks, getUsers } from \"./services/api\";\nexport default function App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      landmarks = _useState2[0],\n      setLandmarks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      users = _useState4[0],\n      setUsers = _useState4[1];\n\n  useEffect(function () {\n    var fetchData = function fetchData() {\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = setLandmarks;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(getLandmarks());\n\n            case 3:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              _context.t2 = setUsers;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(getUsers());\n\n            case 8:\n              _context.t3 = _context.sent;\n              (0, _context.t2)(_context.t3);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    if (landmarks.length === 0) {\n      fetchData();\n    }\n  }, []);\n\n  var getUsersDropdownData = function getUsersDropdownData() {\n    return {\n      'users': users.map(function (u) {\n        return {\n          'label': u.fullname,\n          'value': u.username\n        };\n      })\n    };\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(MapView, {\n    style: styles.map,\n    initialRegion: {\n      latitude: -37.807,\n      longitude: 144.991,\n      latitudeDelta: 0.05,\n      longitudeDelta: 0.05\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, landmarks.map(function (landmark) {\n    var _users$find;\n\n    return React.createElement(Marker, {\n      key: landmark.id,\n      coordinate: {\n        latitude: landmark.latitude,\n        longitude: landmark.longitude\n      },\n      title: (_users$find = users.find(function (u) {\n        return u.username === landmark.username;\n      })) == null ? void 0 : _users$find.fullname,\n      description: landmark.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    });\n  })), React.createElement(View, {\n    style: styles.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Dropdown, {\n    containerStyle: styles.users,\n    label: \"Users\",\n    data: getUsersDropdownData(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    style: styles.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Add\")), React.createElement(Image, {\n    source: require(\"./images/crosshair.png\"),\n    style: styles.crosshair,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%'\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    flexDirection: 'row'\n  },\n  users: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: 'bold'\n  },\n  link: {\n    fontSize: 16,\n    color: '#3366ff'\n  }\n});","map":{"version":3,"sources":["C:/dev/TigerSpike/LandmarkRemark/src/App/App.tsx"],"names":["React","useState","useEffect","MapView","Marker","Dropdown","getLandmarks","getUsers","App","landmarks","setLandmarks","users","setUsers","fetchData","length","getUsersDropdownData","map","u","fullname","username","styles","container","latitude","longitude","latitudeDelta","longitudeDelta","landmark","id","find","comment","toolbar","link","require","crosshair","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","width","height","position","top","left","marginLeft","marginTop","padding","flexDirection","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, Text, View, Image } from 'react-native'\nimport MapView, { Marker } from 'react-native-maps'\nimport { Dropdown } from 'react-native-material-dropdown'\nimport { getLandmarks, getUsers } from './services/api'\nimport { Landmark } from './models/Landmark'\nimport { User } from './models/User'\n\nexport default function App() {\n  const [landmarks, setLandmarks] = useState([] as Landmark[])\n  const [users, setUsers] = useState([] as User[])\n\n  useEffect(() => {\n    var fetchData = async () => {\n      setLandmarks(await getLandmarks())\n      setUsers(await getUsers())\n    }\n\n    if (landmarks.length === 0) {\n      fetchData()\n    }\n  }, []);\n\n  var getUsersDropdownData = () => {\n    return {\n      'users': users.map((u) => {\n        return {\n          'label': u.fullname,\n          'value': u.username,\n        }\n      })\n    }  \n  }\n\n  return (\n    <>\n      <View style={styles.container}>\n        <MapView style={styles.map} initialRegion={{\n          latitude: -37.807,\n          longitude: 144.991,\n          latitudeDelta: 0.05,\n          longitudeDelta: 0.05,\n        }}>\n          {landmarks.map((landmark) =>\n            <Marker\n              key={landmark.id}\n              coordinate={{ latitude: landmark.latitude, longitude: landmark.longitude }}\n              title={(users.find(u => u.username === landmark.username))?.fullname}\n              description={landmark.comment}\n            />\n          )}\n        </MapView>\n        <View style={styles.toolbar}>\n          <Dropdown containerStyle={styles.users} label='Users' data={getUsersDropdownData()}/>\n          <Text style={styles.link}>Add</Text>\n        </View>\n        <Image source={require('./images/crosshair.png')} style={styles.crosshair} />\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  map: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n  },\n  crosshair: {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    width: 50,\n    height: 50,\n    marginLeft: -25,\n    marginTop: -25,\n  },\n  toolbar: {\n    flex: 0,\n    padding: 20,\n    flexDirection: 'row',\n  },\n  users: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  link: {\n    fontSize: 16,\n    color: '#3366ff',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}